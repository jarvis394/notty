#!/usr/bin/env python

from prompt_toolkit.application import Application
from prompt_toolkit.buffer import Buffer
from prompt_toolkit.key_binding import KeyBindings
from prompt_toolkit.layout.containers import (
    HSplit,
    VSplit,
    Window,
    WindowAlign
)
from prompt_toolkit.layout.controls import BufferControl, FormattedTextControl
from prompt_toolkit.formatted_text import HTML
from prompt_toolkit.layout.layout import Layout
from prompt_toolkit.widgets import (
    Button,
    Dialog,
    Label,
    SearchToolbar,
    TextArea,
)
from colorama import Fore, Style

RS = Style.RESET_ALL

"""
View:
 ________________________
|           |            |
| Note Tree |   Editor   |
|           |            |
|___________|____________|
|  Search   |  Buttons   |
|___________|____________|
"""

left_buffer = Buffer()
right_buffer = Buffer()

left_window = Window(BufferControl(buffer=left_buffer))
right_window = Window(BufferControl(buffer=right_buffer))


note_tree = 

body = VSplit(
    [
        left_window,
        Window(width=1, char="│", style="class:line"),
        right_window,
    ]
)

def get_titlebar_text():
    return [
        ("class:title", "Notes"),
        ("class:title", HTML('<style color="gray">(Press [Ctrl-C] to quit)</style>')),
    ]


root_container = HSplit(
    [
        Window(
            height=1,
            content=FormattedTextControl(get_titlebar_text),
            align=WindowAlign.CENTER,
        ),
        Window(height=1, char="―", style="class:line"),
        body,
    ]
)

kb = KeyBindings()

@kb.add("c-c", eager=True)
@kb.add("c-q", eager=True)
def _(event):
    event.app.exit()

def default_buffer_changed(_):
    right_buffer.text = left_buffer.text[::-1]


left_buffer.on_text_changed += default_buffer_changed

application = Application(
    layout=Layout(root_container, focused_element=left_window),
    key_bindings=kb,
    mouse_support=True,
    full_screen=True,
)

def execute():
    application.run()
